<views:MvxWpfView x:Class="SpriteEditor.Views.HomePageView"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                 xmlns:local="clr-namespace:SpriteEditor.Views"
                 xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
                 xmlns:e="http://schemas.microsoft.com/xaml/behaviors"
                 xmlns:behaviors="clr-namespace:SpriteEditor.Behaviors"
                 mc:Ignorable="d" 
                 d:DesignHeight="450"
                 d:DesignWidth="800"
                 xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase">
    <views:MvxWpfView.InputBindings>
        <KeyBinding Gesture="CTRL+S"
                    Command="{Binding SaveCommand}" />
        <KeyBinding Gesture="CTRL+O"
                    Command="{Binding OpenCommand}" />
    </views:MvxWpfView.InputBindings>
    <Grid>
        <Grid.InputBindings>
            <KeyBinding Gesture="CTRL+S"
                        Command="{Binding SaveCommand}" />
        </Grid.InputBindings>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="Open folder"
                          InputGestureText="Ctrl+O"
                          Command="{Binding OpenCommand}" />
                <MenuItem Header="Save selected sprite"
                          InputGestureText="Ctrl+S"
                          Command="{Binding SaveCommand}" />
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="100" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" MinWidth="300" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TreeView Grid.Row="0"
                          ItemsSource="{Binding SpriteSheets}">
                    <e:Interaction.Behaviors>
                        <behaviors:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
                    </e:Interaction.Behaviors>
                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add sprite" Command="{Binding AddSpriteCommand}" />
                            <MenuItem Header="Add animation" Command="{Binding AddAnimationCommand}" />
                            <MenuItem Header="Add frame" Command="{Binding AddFrameCommand}" />
                        </ContextMenu>
                    </TreeView.ContextMenu>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Path=Animations}">
                            <StackPanel>
                                <TextBlock x:Name="AnimationNameReadonly"
                                           Text="{Binding Name}"
                                           PreviewMouseLeftButtonDown="UIElement_OnMouseDoubleClick" />
                                <TextBox Text="{Binding Name}"
                                         KeyDown="UIElement_OnKeyDown"
                                         IsVisibleChanged="UIElement_OnIsVisibleChanged"
                                         LostFocus="UIElement_OnLostFocus">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsVisible, ElementName=AnimationNameReadonly}" Value="False">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </StackPanel>
                            <HierarchicalDataTemplate.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding Path=Frames}" AlternationCount="100">
                                    <StackPanel>
                                        <TextBlock x:Name="AnimationNameReadonly"
                                                   Text="{Binding Name}"
                                                   PreviewMouseLeftButtonDown="UIElement_OnMouseDoubleClick" />
                                        <TextBox Text="{Binding Name}"
                                                 KeyDown="UIElement_OnKeyDown"
                                                 IsVisibleChanged="UIElement_OnIsVisibleChanged"
                                                 LostFocus="UIElement_OnLostFocus">
                                            <TextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsVisible, ElementName=AnimationNameReadonly}" Value="False">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                    </StackPanel>
                                    <HierarchicalDataTemplate.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding IsShown}" Focusable="False" />
                                                <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}, AncestorLevel=1},
                                                                          Path=(ItemsControl.AlternationIndex)}"
                                                           Width="100" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </HierarchicalDataTemplate.ItemTemplate>
                                </HierarchicalDataTemplate>
                            </HierarchicalDataTemplate.ItemTemplate>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
                <GridSplitter Grid.Row="1" 
                              VerticalAlignment="Center"
                              HorizontalAlignment="Stretch"
                              Height="3" />
                <StackPanel Grid.Row="2"
                            Margin="5"
                            HorizontalAlignment="Stretch">
                    <TextBlock>Sprite name</TextBlock>
                    <TextBox Text="{Binding SelectedSpriteSheet.Name, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" />
                    <TextBlock>Background offset X</TextBlock>
                    <TextBox Text="{Binding SelectedFrame.X, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" />
                    <TextBlock>Background offset Y</TextBlock>
                    <TextBox Text="{Binding SelectedFrame.Y, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" />

                    <TextBlock>Width</TextBlock>
                    <TextBox Text="{Binding SelectedFrame.Width, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" />
                    <TextBlock>Height</TextBlock>
                    <TextBox Text="{Binding SelectedFrame.Height, UpdateSourceTrigger=LostFocus, Mode=TwoWay}" />

                    <TextBlock>Duplicates count</TextBlock>
                    <TextBox Text="{Binding SelectedFrame.Model.Duplicates, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </Grid>
            <GridSplitter Grid.Column="1" 
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Center"
                          Width="3" />
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <DockPanel Grid.Row="0"
                           LastChildFill="True">
                    <ComboBox x:Name="ModeSelector"
                              Width="100"
                              Margin="5">
                        <ComboBoxItem IsSelected="True">Offset editor</ComboBoxItem>
                        <ComboBoxItem>Frames editor</ComboBoxItem>
                    </ComboBox>
                    <Slider x:Name="ScaleSlider"
                            Margin="5"
                            Value="1" Minimum="0.5" Maximum="6"
                            SmallChange="0.1" LargeChange="0.1" />
                </DockPanel>
                <ListBox Grid.Row="1"
                         ItemsSource="{Binding AvailableFrames}"
                         SelectedItem="{Binding SelectedFrame}"
                         PreviewMouseDown="CanvasItemsControl_OnPreviewMouseDown"
                         PreviewKeyDown="CanvasItemsControl_OnPreviewKeyDown"
                         KeyboardNavigation.IsTabStop="True"
                         IsSynchronizedWithCurrentItem="True"
                         Focusable="True">
                    <ListBox.Style>
                        <Style TargetType="{x:Type ListBox}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedItem.Content, ElementName=ModeSelector}" Value="Offset editor">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Style>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas x:Name="MainCanvas"
                                    UseLayoutRounding="True"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Focusable="True">
                                <Canvas.LayoutTransform>
                                    <ScaleTransform ScaleX="{Binding Value, ElementName=ScaleSlider}"
                                                    ScaleY="{Binding Value, ElementName=ScaleSlider}" />
                                </Canvas.LayoutTransform>
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid Height="{Binding Height}"
                                      Width="{Binding Width}">
                                    <Grid.Background>
                                        <ImageBrush ImageSource="{Binding Path=DataContext.SelectedSpriteSheet.SpriteImage,
                                                                          RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                                    AlignmentX="Left"
                                                    AlignmentY="Top"
                                                    Stretch="None"
                                                    Viewport="{Binding Path=DataContext.SelectedSpriteSheet.SpriteImage,
                                                                       RelativeSource={RelativeSource AncestorType={x:Type ListBox}},
                                                                       Converter={StaticResource ImageToRectConverter}}">
                                            <ImageBrush.Transform>
                                                <TranslateTransform X="{Binding X, Converter={StaticResource InvertValueConverter}}"
                                                                    Y="{Binding Y, Converter={StaticResource InvertValueConverter}}" />
                                            </ImageBrush.Transform>
                                        </ImageBrush>
                                    </Grid.Background>
                                </Grid>
                                <Border x:Name="FrameBorder"
                                        BorderThickness="1"
                                        Opacity="0.8">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="BorderBrush" Value="Black" />
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource AreEqualConverter}">
                                                            <Binding Path="." />
                                                            <Binding Path="DataContext.SelectedFrame" RelativeSource="{RelativeSource AncestorType={x:Type ListBox}}" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="BorderBrush" Value="DarkRed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Rectangle Stretch="None"
                                               Width="{Binding Width}"
                                               Height="{Binding Height}"
                                               Margin="0, 0, -1, -1" />
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="Bd"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}"
                                                Padding="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true"/>
                                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                <Setter Property="Foreground" Value="Transparent"/>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Canvas.Left">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource OffsetConverter}"
                                                  Mode="TwoWay"
                                                  ConverterParameter="X">
                                        <Binding Path="DataContext.InitialPosition"
                                                 Mode="OneWay"
                                                 RelativeSource="{RelativeSource AncestorType={x:Type ListBox}}" />
                                        <Binding Path="Model.OffsetX"
                                                 Mode="TwoWay" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Canvas.Top">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource OffsetConverter}"
                                                  Mode="TwoWay"
                                                  ConverterParameter="Y">
                                        <Binding Path="DataContext.InitialPosition"
                                                 Mode="OneWay"
                                                 RelativeSource="{RelativeSource AncestorType={x:Type ListBox}}" />
                                        <Binding Path="Model.OffsetY"
                                                 Mode="TwoWay" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsShown}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsShown}" Value="True">
                                    <Setter Property="Opacity" Value="0.66" />
                                </DataTrigger>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource AreEqualConverter}">
                                            <Binding Path="." />
                                            <Binding Path="DataContext.SelectedFrame" RelativeSource="{RelativeSource AncestorType={x:Type ListBox}}" />
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="Opacity" Value="1" />
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                <ScrollViewer Grid.Row="1"
                              HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Auto">
                    <ScrollViewer.Style>
                        <Style TargetType="{x:Type ScrollViewer}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedItem.Content, ElementName=ModeSelector}" Value="Frames editor">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ScrollViewer.Style>
                    <ListBox ItemsSource="{Binding AvailableFrames}"
                             SelectedItem="{Binding SelectedFrame}"
                             IsSynchronizedWithCurrentItem="True"
                             SelectionMode="Single"
                             MouseLeave="ListBox_OnMouseLeave"
                             MouseMove="ListBox_OnMouseMove"
                             PreviewMouseLeftButtonDown="ListBox_OnPreviewMouseLeftButtonDown"
                             PreviewMouseLeftButtonUp="ListBox_OnPreviewMouseLeftButtonUp">
                        <ListBox.Template>
                            <ControlTemplate>
                                <Grid>
                                    <Image x:Name="image"
                                           Source="{Binding SelectedSpriteSheet.SpriteImage}"
                                           Height="Auto" Width="Auto"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           UseLayoutRounding="True">
                                        <Image.LayoutTransform>
                                            <ScaleTransform ScaleX="{Binding Value, ElementName=ScaleSlider}"
                                                            ScaleY="{Binding Value, ElementName=ScaleSlider}" />
                                        </Image.LayoutTransform>
                                    </Image>
                                    <Canvas Width="{Binding ActualWidth, ElementName=image}"
                                            Height="{Binding ActualHeight, ElementName=image}"
                                            UseLayoutRounding="True"
                                            IsItemsHost="True">
                                        <Canvas.LayoutTransform>
                                            <ScaleTransform ScaleX="{Binding Value, ElementName=ScaleSlider}"
                                                            ScaleY="{Binding Value, ElementName=ScaleSlider}" />
                                        </Canvas.LayoutTransform>
                                    </Canvas>
                                </Grid>
                            </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1"
                                        Opacity="0.3"
                                        Margin="-1, -1, 0, 0">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="BorderBrush" Value="Black" />
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource AreEqualConverter}">
                                                            <Binding Path="." />
                                                            <Binding Path="DataContext.SelectedFrame" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="BorderBrush" Value="DarkRed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Rectangle x:Name="FrameRectangle"
                                               Stretch="None"
                                               Width="{Binding Width, Mode=TwoWay}"
                                               Height="{Binding Height, Mode=TwoWay}"
                                               Margin="0, 0, -1, -1"/>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="Bd"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    Padding="{TemplateBinding Padding}"
                                                    SnapsToDevicePixels="true">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="true">
                                                    <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="true"/>
                                                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                                    <Setter Property="Foreground" Value="Transparent"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}" />
                                <Setter Property="Canvas.Top" Value="{Binding Y, Mode=TwoWay}" />
                                <Setter Property="AllowDrop" Value="True" />
                                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListBoxItem_OnPreviewMouseLeftButtonDown" />
                                <EventSetter Event="PreviewMouseMove" Handler="ListBoxItem_OnMouseMove" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </ScrollViewer>
                <StatusBar Grid.Row="2">
                    <StatusBarItem>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Offset: {0}, {1}">
                                    <Binding Path="SelectedFrame.Model.OffsetX" />
                                    <Binding Path="SelectedFrame.Model.OffsetY" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StatusBarItem>
                    <Separator />
                    <StatusBarItem>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Size: {0}x{1}">
                                    <Binding Path="SelectedFrame.Model.Width" />
                                    <Binding Path="SelectedFrame.Model.Height" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StatusBarItem>
                </StatusBar>
            </Grid>
        </Grid>
    </Grid>
</views:MvxWpfView>
